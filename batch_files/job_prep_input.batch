#!/bin/bash
#SBATCH --nodes=1
#SBATCH --partition=amilan
#SBATCH --ntasks=32
#SBATCH --job-name="prep"
#SBATCH -o "/scratch/alpine/sslack@xsede.org/ortega/shapeit_input_imp/maf0.03_rsq0.9/job_prep_input.out"
#SBATCH -e "/scratch/alpine/sslack@xsede.org/ortega/shapeit_input_imp/maf0.03_rsq0.9/job_prep_input.err"
#SBATCH --account=amc-general

# TO NOTE: depending on where running may have additional steps so apptainer
# ready to run shell below.
# TO NOTE: update the variables to set the single-chromosome PLINK input file
# name structure (plink_input), the output directory (out_dir), the code
# directory (code_dir), the genome build (hg19 or hg38), and the list of
# chromosomes want to run (batch) with the given PLINK input file name structure.

data_dir="/Users/slacksa/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Collabs/ortega"
plink_input='${data_dir}/data/pipeline_test_data/chip/chr${chr}_small'
	# single quotes are required here for substitution of $chr below
out_dir="${data_dir}/data/pipeline_test_data/chip_output_comp"
code_dir="/Users/slacksa/repos/pgx_laba/local_anc_afr_eur"
build="hg19"  # either "hg19" or "hg38"

# batch=$(seq 1 22)
batch="22"

for chr in $batch; do
	echo "Preparing chr${chr} input."
	bed_fn_chr=$(eval "echo $bed_fn")

	apptainer exec --bind ${data_dir}:${data_dir} --bind ${code_dir}:${code_dir} \
		${code_dir}/local_ancestry_analysis.sif \
		bash ${code_dir}/prep_input.sh \
		"$plink_input" \
		"$out_dir" \
		"$code_dir" \
		"$build"

done
