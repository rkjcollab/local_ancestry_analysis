#!/bin/bash
#SBATCH --nodes=1
#SBATCH --partition=amilan
#SBATCH --ntasks=64
#SBATCH --job-name="shapeit"
#SBATCH -o "/scratch/alpine/sslack@xsede.org/ortega/shapeit_output/job_run_shapeit.out"
#SBATCH -e "/scratch/alpine/sslack@xsede.org/ortega/shapeit_output/job_run_shapeit.err"
#SBATCH --account=amc-general
#SBATCH --time=22:00:00

# TO NOTE: update the variables to set the data directory (data_dir), code
# directory (code_dir), the PLINK bed file name (bed_fn, note that chromosome
# number in the file name will be filled in by the loop), thread number
# (nr_threads), the list of chromosomes want to run (batch) with the given PLINK
# input file name structure, and the output directory (out_dir).

data_dir="/Users/slacksa/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Collabs/ortega"
code_dir="/Users/slacksa/repos/pgx_laba/local_anc_afr_eur"
bed_fn='${data_dir}/data/pipeline_test_data/chip_output/chr${chr}_small_dedup_hg19.bed'
	# single quotes are required here for substitution of $chr below
nr_threads=4
out_dir="${data_dir}/data/pipeline_test_data/chip_output"

# batch=$(seq 1 4)  # running in 4+ batches
# batch=$(seq 5 8)
# batch=$(seq 9 15)
# batch=$(seq 16 22)
batch="22"

cd "$out_dir"  # so logs saved in output directory
genetic_map_input_dir="/data/shapeit_input/genetic_map_hapmap"  # path to map in container

for chr in $batch; do
	bed_fn_chr=$(eval "echo $bed_fn")

	apptainer exec --bind ${data_dir}:${data_dir} --bind ${code_dir}:${code_dir} \
		${code_dir}/local_ancestry_analysis.sif \
 		bash ${code_dir}/run_shapeit.sh \
 	 	"$bed_fn_chr" \
		"$nr_threads" \
		"$genetic_map_input_dir" \
		"$out_dir"

done
